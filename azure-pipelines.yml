# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: FeatureFlags
  displayName: Resonance.FeatureFlags
  dependsOn: []
  jobs:
  - job: Build
    steps:
    - script: cd ./src/FeatureFlags && dotnet build --configuration $(buildConfiguration)

- stage: UseCases
  displayName: Resonance.UseCases
  dependsOn: []
  jobs:
  - job: Build
    steps:
      - script: cd ./src/UseCases && dotnet build --configuration $(buildConfiguration)

- stage: Outbox_Windows
  displayName: Windows | Resonance.Outbox
  pool:
    vmImage: 'windows-latest'
  dependsOn: []
  jobs:
  - job: Build
    steps:
    - script: cd ./src/Outbox && dotnet build --configuration $(buildConfiguration)
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*.Tests.dll
          !**\*TestAdapter.dll
          !**\obj\**
          !**\*Playground.Tests.dll
        searchFolder: '$(System.DefaultWorkingDirectory)'

- stage: Outbox_Linux
  displayName: Linux | Resonance.Outbox
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: []
  jobs:
  - job: Build_Test
    displayName: Build and test
    steps:
    - script: cd ./src/Outbox/Resonance.Outbox.Serialization.Tests && dotnet build --configuration $(buildConfiguration) && dotnet test --logger trx
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'
